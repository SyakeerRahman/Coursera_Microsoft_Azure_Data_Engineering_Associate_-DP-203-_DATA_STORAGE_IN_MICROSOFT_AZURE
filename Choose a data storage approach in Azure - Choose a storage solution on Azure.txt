Choosing the correct storage solution
can lead to better performance, cost savings and improved manageability. Here, you'll apply what you've
learned about the data in your online retail scenario, you'll review product
catalog data, photos and videos, and business analysis and find the best
Microsoft Azure service for each data set. Let's start by reviewing
product catalog data. The classification of the data is semi
structured because of the need to extend or modify the schema for new products. Customers require a high number of read
operations with the ability to query many fields within the database. The business requires a high number of
write operations to track its constantly changing inventory. The performance requirements
include high throughput, the rate at which the system can
process inputs and low latency, the amount of time it takes
to complete an operation. And because all of the data
is both historical and yet changing transactional
support is required. Microsoft's Azure Cosmos DB
supports semi structured data or no sequel data by design. So supporting new fields such as
the Bluetooth enabled field or any new fields you need in the future
is a given with Azure Cosmos DB. It also supports sequel for queries and
every property is indexed by default. You can create queries so that your customers can filter
on any property in the catalog. As your cosmos DB is also acid compliant,
so you can be assured that your transactions are completed according
to those strict requirements. As an added plus, Azure Cosmos DB
also enables you to replicate your data anywhere in the world
with the click of a button. So if your e commerce site has users
concentrated in the US or Japan, you can replicate your data to
those data centers to reduce latency as you physically moved
the data closer to your users. Even with data replicated
around the world, you can choose from one of
five consistency levels. Azure Cosmos DB allows developers
to choose between five well defined consistency models
along the consistency spectrum, strong bounded staleness, session,
consistent prefects and eventual. These consistency levels enable you
to maximize the availability and performance of your database
depending on your needs. Eventual consistency provides the lowest
latency and the least consistency. Strong consistency results
in the highest latency, but also the greatest consistency. By choosing the right consistency level,
you can determine the trade offs to make between consistency availability,
latency and throughput. You can scale up to handle higher customer
demand during peak shopping times or scale down during slower
times to conserve cost. Microsoft Azure sequel database would be
an excellent choice for a product catalog data set if you could identify the subset
of properties that are common for most of the products and the variable properties
that might not exist in some products. Azure sequel database enables you to
combine structured data in the columns and semi structured data stored as Jason
columns, that can be easily extended. Azure sequel database can provide many of
the same benefits of Azure Cosmos DB, but it provides little benefit if
the structure of your data is changing in different entities and you cannot
predefined a set of common properties that are repeated in most of the entities. Unlike Azure Cosmos DB that indexes
every property in the documents, in Azure sequel database,
you need to explicitly define what properties from semi
structured documents should be indexed. Other Azure services, such as Azure
table storage, as your hatch bases, part of HDInsight and Azure cache for
Redis can also store no sequel data. In this scenario, users will want
to query on multiple fields, so Azure Cosmos DB is a better fit. Azure Cosmos DB indexes
every field by default, whereas the other services are limited
in the data they index and querying on non index fields,
results in reduced performance. Now, let's look at the data set
requirements for photos and videos. The data is classified as unstructured, you only need to retrieve
the data using an ID. Customers require a high number of read
operations with low latency, creates and updates will be somewhat infrequent and can have higher latency
than read operations. Retrievals by ID need to support
low latency and high throughput, creates and updates kind of higher
latency than read operations, and transactional support is not required. Azure Blob storage supports storing
files such as photos and videos. It also works with Azure
content delivery network or CDN by caching the most frequently used
content and storing it on edge servers. Azure CDN reduces latency in serving
up those images to your users. By using Azure blob storage, you can
also move images from the hot storage tier to the cool or
archive storage tier to reduce costs and focus throughput on the most
frequently viewed images and videos. You could upload your images
to Azure app service so that the same server that is running
your app is serving up your images. This solution would work if you
didn't have many files, but if you have lots of files and
a global audience, you'll get better performance results by
using Azure Blob storage with Azure CDN. Finally, let's review the requirements for
business data. The data is classified as structured,
from an operations perspective, no original data is updated
based on the analysis. So business data is read only and complex analytical queries are performed
across multiple databases. Some latency in the result is expected
based on the complex nature of the queries and
transactional support is not required. Business data is typically queried by
business analysts who are more likely to know sequel than any other query language. Azure sequel database could be used
as the solution by itself, but pairing it with Azure analysis services
enables data analysts to create a semantic model over the data in sequel database. The data analysts can then
share it with business users so that they only need to connect to the
model from any business intelligence or BI tool to immediately explore
the data and gain insights. Azures synapse supports O-lab
solutions and sequel queries, but your business analysts will need
to perform cross database queries, which Azure synapse does not support. Azure analysis services could be used in
addition to Azure sequel database, but your business analysts are more well
versed in sequel than in working with Power BI. So they'd like a database
that supports sequel queries which Azure Analysis Services does not. In addition,
the financial data you're storing in your business data set is relational and
multidimensional in nature. Azure Analysis Services supports tabular
data stored on the service itself, but not multidimensional data. To analyze multidimensional data
with Azure Analysis Services, you can use a direct query
to the sequel database. Azure Stream Analytics is a great way
to analyze data and transform it into actionable insights, but it's focuses
on real time incoming data streams. In this scenario, the business analysts
are looking at historical data only. Each type of data has different
storage requirements and it's your job to figure out
which solution is best. Always consider the type of data,
the operations required, expected latency and the need for
transactional support.